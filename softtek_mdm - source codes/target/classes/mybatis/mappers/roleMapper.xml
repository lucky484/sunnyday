<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softtek.mdm.dao.RoleDao">
	<sql id="filterRecordSql">
		(
		<if test="user==null">
		SELECT id FROM org_managers
		WHERE org_managers.delete_time IS NULL
		AND user_id IS NOT NULL
		AND org_managers.create_by IN (
			SELECT r.manager_id FROM organization_manager_relation r
			WHERE r.org_id = #{orgId}
		)
		
			UNION ALL
			SELECT r.manager_id AS id FROM organization_manager_relation r
			WHERE r.org_id = #{orgId}
		</if>
		<if test="user!=null">
			SELECT id FROM org_managers
			WHERE delete_time IS NULL
			AND user_id=#{user.id}
			AND org_id=#{orgId}
			UNION ALL
			SELECT r.manager_id AS id FROM organization_manager_relation r
			WHERE r.org_id = #{orgId}
		</if>
		)
	</sql>
	
	
	<resultMap type="Role" id="RoleMap">
		<id property="id" column="id"/>
		<result  property="name" column="name"/>
		<result  property="mark" column="mark"/>
		<result  property="createTime" column="create_time"/>
		<result  property="updateTime" column="update_time"/>
		<result  property="createBy" column="create_by"/>
		<result  property="updateBy" column="update_by"/>
		<association property="organization" javaType="Organization">
			<id property="id" column="org_id"/>
		</association>
	</resultMap>
	
	<insert id="save" parameterType="Role" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO user_role(org_id,name,mark,update_time,create_time,create_by,update_by,delete_time)
		VALUES(#{organization.id},#{name},#{mark},NOW(),NOW(),#{createBy},#{updateBy},null)
	</insert>
	
	
	<update id="update" parameterType="Role">
		UPDATE user_role
		SET
		<if test="name!=null and name!=''">
			name=#{name},
		</if>
		<if test="mark!=null and mark!=''">
			mark=#{mark},
		</if>
		update_time=NOW(),
		org_id=#{organization.id}
		WHERE id=#{id}
	</update>
	
	<select id="findAllByOrgId" parameterType="java.lang.Integer" resultMap="RoleMap">
		SELECT id,org_id,name,mark,update_time,create_time
		FROM user_role
		WHERE org_id=#{orgId}
		AND delete_time is null
	</select>
	
	<select id="findRecordsByPage" resultMap="RoleMap">
		SELECT id,org_id,name,mark,update_time,create_time,create_by,update_by
		FROM user_role
		WHERE org_id=#{orgId}
		AND delete_time is null
		AND name like CONCAT('%',#{roleName},'%')
		ORDER BY update_time desc
		LIMIT #{pageNum},#{pageSize}
	</select>
	
	<select id="AllCountByOrgId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT count(1)
		FROM user_role
		WHERE org_id=#{orgId}
		AND delete_time is null
	</select>
	
	<select id="queryCountByParamsMap" resultType="java.lang.Integer">
		SELECT count(1)
		FROM user_role
		WHERE org_id=#{orgId}
		AND name like CONCAT('%',#{roleName},'%')
		AND delete_time is null
	</select>
	
	<select id="findOne" parameterType="java.lang.Integer" resultMap="RoleMap">
		SELECT id,org_id,name,mark
		FROM user_role
		WHERE id=#{id}
		AND delete_time is null
	</select>
	
	<update id="deleteWithPk" parameterType="java.lang.Integer">
		UPDATE user_role
		SET delete_time = NOW()
		WHERE id=#{id}
	</update>
	
	<select id="isExists" resultType="java.lang.Integer">
		SELECT count(1)
		FROM user_role
		WHERE delete_time is null
		AND org_id=#{1}
		AND name=#{0}
	</select>
	
</mapper>