<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softtek.mdm.dao.IosWifiConfigureDao">
  <resultMap id="BaseResultMap" type="com.softtek.mdm.model.IosWifiConfigure">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ssid" jdbcType="VARCHAR" property="ssid" />
    <result column="is_autojoin" jdbcType="CHAR" property="isAutojoin" />
    <result column="is_hiddennetwork" jdbcType="CHAR" property="isHiddennetwork" />
    <result column="security_type" jdbcType="CHAR" property="securityType" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="eap_method" jdbcType="CHAR" property="eapMethod" />
    <result column="stage_authentication" jdbcType="CHAR" property="stageAuthentication" />
    <result column="ca_certificate" jdbcType="CHAR" property="caCertificate" />
    <result column="user_certificate" jdbcType="CHAR" property="userCertificate" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="anonymous_identity" jdbcType="VARCHAR" property="anonymousIdentity" />
    <result column="agent" jdbcType="CHAR" property="agent" />
    <result column="agent_server" jdbcType="VARCHAR" property="agentServer" />
    <result column="agent_port" jdbcType="VARCHAR" property="agentPort" />
    <result column="agent_appraisal" jdbcType="VARCHAR" property="agentAppraisal" />
    <result column="agent_password" jdbcType="VARCHAR" property="agentPassword" />
    <result column="agent_url" jdbcType="VARCHAR" property="agentUrl" />
    <result column="ios_device_policy_id" jdbcType="INTEGER" property="iosDevicePolicyId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, ssid, is_autojoin, is_hiddennetwork, security_type, password, eap_method, stage_authentication, 
    ca_certificate, user_certificate, identity, anonymous_identity, agent, agent_server,agent_port,
    agent_appraisal, agent_password, agent_url, ios_device_policy_id, create_date, create_user, update_date, update_user, 
    delete_time
  </sql>
  
  <!-- 根据主键查询表 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ios_wifi_configure
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 根据主键删除表 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ios_wifi_configure
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 插入表 -->
  <insert id="insert" parameterType="com.softtek.mdm.model.IosWifiConfigure">
    insert into ios_wifi_configure (id, ssid, is_autojoin, 
      is_hiddennetwork, security_type, password, 
      eap_method, stage_authentication, ca_certificate, 
      user_certificate, identity, anonymous_identity, 
      agent,agent_server,agent_port,agent_appraisal,agent_password,
      agent_url,ios_device_policy_id, create_date, create_user, 
      update_date, update_user, delete_time 
      )
    values (#{id,jdbcType=INTEGER}, #{ssid,jdbcType=VARCHAR}, #{isAutojoin,jdbcType=CHAR}, 
      #{isHiddennetwork,jdbcType=CHAR}, #{securityType,jdbcType=CHAR}, #{password,jdbcType=VARCHAR}, 
      #{eapMethod,jdbcType=CHAR}, #{stageAuthentication,jdbcType=CHAR}, #{caCertificate,jdbcType=CHAR}, 
      #{userCertificate,jdbcType=CHAR}, #{identity,jdbcType=VARCHAR}, #{anonymousIdentity,jdbcType=VARCHAR}, 
      #{agent,jdbcType=CHAR},#{agentServer,jdbcType=VARCHAR},#{agentPort,jdbcType=VARCHAR},
      #{agentAppraisal,jdbcType=VARCHAR},#{agentPassword,jdbcType=VARCHAR},#{agentUrl,jdbcType=VARCHAR},
      #{iosDevicePolicyId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{deleteTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <!-- 插入可选的字段表 -->
  <insert id="insertSelective" parameterType="com.softtek.mdm.model.IosWifiConfigure">
    insert into ios_wifi_configure
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ssid != null">
        ssid,
      </if>
      <if test="isAutojoin != null">
        is_autojoin,
      </if>
      <if test="isHiddennetwork != null">
        is_hiddennetwork,
      </if>
      <if test="securityType != null">
        security_type,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="eapMethod != null">
        eap_method,
      </if>
      <if test="stageAuthentication != null">
        stage_authentication,
      </if>
      <if test="caCertificate != null">
        ca_certificate,
      </if>
      <if test="userCertificate != null">
        user_certificate,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="anonymousIdentity != null">
        anonymous_identity,
      </if>
      <if test="agent != null">
        agent,
      </if>  
      <if test="agentServer != null">
        agent_server,
      </if>
      <if test="agentPort != null">
        agent_port,
      </if>
      <if test="agentAppraisal != null">
        agent_appraisal,
      </if>
      <if test="agentPassword != null">
        agent_password,
      </if>
      <if test="agentUrl != null">
        agent_url,
      </if>
      <if test="iosDevicePolicyId != null">
        ios_device_policy_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ssid != null">
        #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="isAutojoin != null">
        #{isAutojoin,jdbcType=CHAR},
      </if>
      <if test="isHiddennetwork != null">
        #{isHiddennetwork,jdbcType=CHAR},
      </if>
      <if test="securityType != null">
        #{securityType,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="eapMethod != null">
        #{eapMethod,jdbcType=CHAR},
      </if>
      <if test="stageAuthentication != null">
        #{stageAuthentication,jdbcType=CHAR},
      </if>
      <if test="caCertificate != null">
        #{caCertificate,jdbcType=CHAR},
      </if>
      <if test="userCertificate != null">
        #{userCertificate,jdbcType=CHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="anonymousIdentity != null">
        #{anonymousIdentity,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        #{agent,jdbcType=CHAR},
      </if>
      <if test="agentServer != null">
        #{agentServer,jdbcType=VARCHAR},
      </if>
      <if test="agentPort != null">
        #{agentPort,jdbcType=VARCHAR},
      </if>
      <if test="agentAppraisal != null">
        #{agentAppraisal,jdbcType=VARCHAR},
      </if>
      <if test="agentPassword != null">
        #{agentPassword,jdbcType=VARCHAR},
      </if>
      <if test="agentUrl != null">
        #{agentUrl,jdbcType=VARCHAR},
      </if>
      <if test="iosDevicePolicyId != null">
        #{iosDevicePolicyId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <!--  根据主键更新可选的字段-->
  <update id="updateByPrimaryKeySelective" parameterType="com.softtek.mdm.model.IosWifiConfigure">
    update ios_wifi_configure
    <set>
      <if test="ssid != null">
        ssid = #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="isAutojoin != null">
        is_autojoin = #{isAutojoin,jdbcType=CHAR},
      </if>
      <if test="isHiddennetwork != null">
        is_hiddennetwork = #{isHiddennetwork,jdbcType=CHAR},
      </if>
      <if test="securityType != null">
        security_type = #{securityType,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="eapMethod != null">
        eap_method = #{eapMethod,jdbcType=CHAR},
      </if>
      <if test="stageAuthentication != null">
        stage_authentication = #{stageAuthentication,jdbcType=CHAR},
      </if>
      <if test="caCertificate != null">
        ca_certificate = #{caCertificate,jdbcType=CHAR},
      </if>
      <if test="userCertificate != null">
        user_certificate = #{userCertificate,jdbcType=CHAR},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="anonymousIdentity != null">
        anonymous_identity = #{anonymousIdentity,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        agent = #{agent,jdbcType=CHAR},
      </if>
      <if test="agentServer != null">
        agent_server = #{agentServer,jdbcType=VARCHAR},
      </if>
       <if test="agentPort != null">
        agent_port = #{agentPort,jdbcType=VARCHAR},
      </if>     
       <if test="agentAppraisal != null">
        agent_appraisal = #{agentAppraisal,jdbcType=VARCHAR},
      </if>     
      <if test="agentPassword != null">
        agent_password = #{agentPassword,jdbcType=VARCHAR},
      </if>  
       <if test="agentUrl != null">
        agent_url = #{agentUrl,jdbcType=VARCHAR},
      </if>
      <if test="iosDevicePolicyId != null">
        ios_device_policy_id = #{iosDevicePolicyId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据主键更新表  -->
  <update id="updateByPrimaryKey" parameterType="com.softtek.mdm.model.IosWifiConfigure">
    update ios_wifi_configure
    set ssid = #{ssid,jdbcType=VARCHAR},
      is_autojoin = #{isAutojoin,jdbcType=CHAR},
      is_hiddennetwork = #{isHiddennetwork,jdbcType=CHAR},
      security_type = #{securityType,jdbcType=CHAR},
      password = #{password,jdbcType=VARCHAR},
      eap_method = #{eapMethod,jdbcType=CHAR},
      stage_authentication = #{stageAuthentication,jdbcType=CHAR},
      ca_certificate = #{caCertificate,jdbcType=CHAR},
      user_certificate = #{userCertificate,jdbcType=CHAR},
      identity = #{identity,jdbcType=VARCHAR},
      anonymous_identity = #{anonymousIdentity,jdbcType=VARCHAR},
      agent = #{agent,jdbcType=CHAR},
      agent_server = #{agentServer,jdbcType=VARCHAR},
      agent_port = #{agentPort,jdbcType=VARCHAR},
      agent_appraisal = #{agentAppraisal,jdbcType=VARCHAR},
      agent_password = #{agentPassword,jdbcType=VARCHAR},
      agent_url = #{agentUrl,jdbcType=VARCHAR},
      ios_device_policy_id = #{iosDevicePolicyId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 批量插入Wifi配置 -->
  <insert id="insertBatchIosWifiConfigure" parameterType="java.util.List" useGeneratedKeys="true">
     insert into ios_wifi_configure (ssid,is_autojoin,security_type,password,agent,agent_server,agent_port,agent_appraisal,agent_password,agent_url,ios_device_policy_id,
     create_date,create_user,update_date,update_user) 
     values 
     <foreach collection="list" item="item" index="index" separator=",">
       (#{item.ssid},#{item.isAutojoin},#{item.securityType},#{item.password},#{item.agent},#{item.agentServer},#{item.agentPort},#{item.agentAppraisal},
       #{item.agentPassword},#{item.agentUrl},#{item.iosDevicePolicyId},#{item.createDate},#{item.createUser},#{item.updateDate},#{item.updateUser}) 
     </foreach>
  </insert>
  
  <!-- 根据策略id获取Ios Wifi-->
  <select id="selectIosWifiByPolicyId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
      <include refid="Base_Column_List" />
    from ios_wifi_configure  
    where ios_device_policy_id = #{policyId,jdbcType=INTEGER} and delete_time is null 
  </select>
  
  <!-- 根据策略id删除Ios WIFI配置 -->
  <update id="delIosWifiConfigureByPolicyId" parameterType="java.lang.Integer">
    update ios_wifi_configure
    set 
      delete_time = now() 
    where ios_device_policy_id = #{policyId,jdbcType=INTEGER}
  </update>
</mapper>