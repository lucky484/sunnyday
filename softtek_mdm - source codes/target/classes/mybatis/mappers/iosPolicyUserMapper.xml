<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softtek.mdm.dao.IosPolicyUserDao">
  <resultMap id="BaseResultMap" type="com.softtek.mdm.model.IosPolicyUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="ios_device_policy_id" jdbcType="INTEGER" property="iosDevicePolicyId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, ios_device_policy_id, create_date, create_user, update_date, update_user, 
    delete_time
  </sql>
  
  <!-- 根据主键查询表 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ios_policy_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 根据主键删除表 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ios_policy_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 插入表 -->
  <insert id="insert" parameterType="com.softtek.mdm.model.IosPolicyUser">
    insert into ios_policy_user (id, user_id, ios_device_policy_id, 
      create_date, create_user, update_date, 
      update_user, delete_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{iosDevicePolicyId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{deleteTime,jdbcType=TIMESTAMP})
  </insert>
  
  <!-- 插入可选的字段表 -->
  <insert id="insertSelective" parameterType="com.softtek.mdm.model.IosPolicyUser">
    insert into ios_policy_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="iosDevicePolicyId != null">
        ios_device_policy_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="iosDevicePolicyId != null">
        #{iosDevicePolicyId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <!-- 根据主键更新可选的字段  -->
  <update id="updateByPrimaryKeySelective" parameterType="com.softtek.mdm.model.IosPolicyUser">
    update ios_policy_user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="iosDevicePolicyId != null">
        ios_device_policy_id = #{iosDevicePolicyId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据主键更新表 -->
  <update id="updateByPrimaryKey" parameterType="com.softtek.mdm.model.IosPolicyUser">
    update ios_policy_user
    set user_id = #{userId,jdbcType=INTEGER},
      ios_device_policy_id = #{iosDevicePolicyId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据策略id获取关联的用户id -->
  <select id="selectUserIdByPolicyId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
     select 
       t1.user_id 
     from ios_policy_user t1 
     where t1.delete_time is null 
     and t1.ios_device_policy_id = #{id} 
  </select>
  
  <!-- 根据当前用户获取以前的策略id start-->
  <select id="selectPolicyIdByUserId" parameterType="com.softtek.mdm.util.DataGridModel" resultType="com.softtek.mdm.model.IosPolicyUser">
    select 
      t1.id,
      t1.user_id as userId,
      t1.ios_device_policy_id as iosDevicePolicyId,
      t1.update_date as updateDate 
    from 
      ios_policy_user t1 
    left join ios_device_policy t2 on t1.ios_device_policy_id = t2.id 
    where t1.delete_time is null 
    and t2.delete_time is null 
    and t1.user_id = #{params.userId} 
    and t2.is_enable = 1 
    and t2.org_id = #{params.orgId}  
    and t1.ios_device_policy_id != #{params.id} 
    order by t1.update_date desc 
  </select>
  
  <!-- 根据用户删除策略用户关联表 -->
  <update id="deleteByPolicyId" parameterType="java.lang.Integer">
     update 
       ios_policy_user 
     set delete_time = now() 
     where ios_device_policy_id = #{id}
     and delete_time is null 
  </update>
  
  <!-- 批量插入IOS设备策略授权用户关联表  start-->
  <insert id="insertBatchIosPolicyUser" parameterType="java.util.List" useGeneratedKeys="true">
    insert into ios_policy_user  
    (user_id,ios_device_policy_id,create_date,create_user,update_date,update_user) 
    values 
    <foreach collection="list" item="item" index="index" separator=",">
     (#{item.userId},#{item.iosDevicePolicyId},#{item.createDate},#{item.createUser},#{item.updateDate},#{item.updateUser})  
    </foreach>
  </insert>
  
  <!-- 根据策略id获取关联的用户 start-->
  <select id="selectDeviceUserById" parameterType="java.lang.Integer" resultType="com.softtek.mdm.model.IosPolicyUser">
     select 
       t1.user_id as userId,
       t2.user_name as username,
       t2.real_name as realname  
     from 
       ios_policy_user t1 
     inner join users t2 on t1.user_id = t2.id and t2.delete_time is null 
     where t1.delete_time is null 
     and t1.ios_device_policy_id = #{id} 
  </select>
  
  <!-- 根据策略id删除关联的用户id start-->
  <update id="updateByUsersId" parameterType="java.lang.Integer" >
    update ios_policy_user    
    set delete_time = now() 
    where ios_device_policy_id = #{id} 
    and delete_time is null 
  </update>
  <!-- 根据策略id删除关联的用户id end-->
  
    
  <!-- 根据用户id和组织机构id查找用户最新的安卓设备策略id -->
  <select id="findOne" resultType="java.lang.Integer">
 	SELECT ios_device_policy_id  
	FROM
	(
	SELECT ios_device_policy_id,ios_policy_department.update_date 
	FROM users
	LEFT JOIN ios_policy_department 
	ON ios_policy_department.org_structure_id=users.group_id
	LEFT JOIN ios_device_policy 
	ON ios_device_policy.id=ios_policy_department.ios_device_policy_id 
	WHERE ios_policy_department.delete_time is NULL
	AND ios_device_policy.org_id=#{1}
	AND users.delete_time is NULL
	AND ios_device_policy.delete_time is NULL
	AND users.id=#{0}
	AND ios_device_policy.is_enable!=0
	
	UNION
	
	SELECT ios_device_policy_id,ios_policy_virtual.update_date
	FROM ios_policy_virtual
	LEFT JOIN ios_device_policy 
	ON ios_device_policy.id=ios_policy_virtual.ios_device_policy_id 
	LEFT JOIN virtual_group
	ON ios_policy_virtual.virtual_group_id=virtual_group.id
	LEFT JOIN users_virtual_group
	ON users_virtual_group.virtual_id=virtual_group.id
	WHERE  ios_policy_virtual.delete_time is NULL
	AND ios_device_policy.delete_time is NULL
	AND ios_device_policy.org_id=#{1}
	AND virtual_group.delete_time is NULL
	AND users_virtual_group.delete_time is NULL
	AND users_virtual_group.user_id=#{0}
	AND ios_device_policy.is_enable!=0
	
	UNION
	
	SELECT ios_device_policy_id,ios_policy_user.update_date
	FROM ios_policy_user 
	LEFT JOIN ios_device_policy 
	ON ios_device_policy.id=ios_policy_user.ios_device_policy_id
	WHERE ios_policy_user.delete_time is NULL
	AND ios_device_policy.delete_time is NULL
	AND ios_device_policy.org_id=#{1}
	AND user_id=#{0}
	AND ios_device_policy.is_enable!=0
	) as tn
	ORDER BY update_date desc 
	LIMIT 1
  	
  </select>
  <!-- 根据当前用户获取以前的策略id end-->
  <select id="findOneByEntity" parameterType="IosPolicyUser" resultType="IosPolicyUser">
  	SELECT  
  	  id,
      user_id as userId,
      ios_device_policy_id as iosDevicePolicyId,
      update_date as updateDate 
      FROM ios_policy_user  
      WHERE user_id=#{userId}
      AND ios_device_policy_id = #{iosDevicePolicyId}
      AND delete_time is null
      ORDER BY update_date desc
      LIMIT 1
  </select>
  
  
</mapper>