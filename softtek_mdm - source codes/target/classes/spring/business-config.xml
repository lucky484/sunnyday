<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
    xmlns:task="http://www.springframework.org/schema/task"   
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.2.xsd">
     
	<!-- import the dataSource definition -->
	<import resource="datasource-config.xml"/>
	<!-- 先关闭Spring Security权限验证 -->
	<import resource="spring-security.xml" />
	<import resource="activemq_config.xml" />
	<context:property-placeholder location="classpath:spring/job.properties" ignore-unresolvable="true" />
	<context:component-scan base-package="com.softtek.mdm" />
<!-- 	<context:component-scan base-package="com.softtek.mdm.util" />
	<import resource="common_bean_config.xml" />
	<context:component-scan base-package="com.softtek.mdm.job" />
	<context:component-scan base-package="com.softtek.mdm.thread" /> -->
<!-- 	<context:component-scan base-package="com.softtek.mdm.jpush" />
   	<bean id="propertyConfigurer" 
   	    class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="location">
       				 <value>classpath:spring/jpush.properties</value>
        </property>
    </bean> -->
	<!-- enables scanning for @Transactional annotations -->
<!-- 	<tx:annotation-driven/> -->
	
	<beans profile="mybatis">
	<!-- Transaction manager for a single JDBC DataSource (alternative to JTA) -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="classpath:mybatis/mybatis.xml" />
			<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml" />
		</bean>
		
		<!-- MapperScannerConfigurer 自动扫描 将Mapper接口生成代理注入到Spring  -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			 <property name="basePackage" value="com.softtek.mdm.dao" />
			 <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		</bean>
		
						<!-- 声明式事务处理 -->
	<!-- Transaction manager for a single JDBC DataSource (alternative to JTA) -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"></property>
		</bean>
		<tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>  
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>  
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>  
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="truncate*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="find*" propagation="NOT_SUPPORTED" read-only="true" /> <!-- 查询方法以非事务的方式执行操作 --> 
            <tx:method name="get*" propagation="NOT_SUPPORTED" read-only="true" />
            <tx:method name="query*" propagation="NOT_SUPPORTED" read-only="true" />
            <tx:method name="select*" propagation="NOT_SUPPORTED" read-only="true" />
            <tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />
        </tx:attributes>  
    </tx:advice> 
    <tx:annotation-driven/>
    <!-- Spring AOP config -->  
    <aop:config>  
        <!-- 切入点 -->  
        <aop:pointcut id="biz"  
            expression="execution(* com.softtek.mdm.service..*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="biz" />
    </aop:config>
    <!-- 定时任务 -->
 	<task:annotation-driven /> 
 	<!--  定时器开关-->  
	<task:scheduled-tasks scheduler="myScheduler"> 
		<!--  每一小时执行一次-->
		<task:scheduled ref="queryStatusTaskJob" method="job" cron="${query_status_task_time}" />
		<task:scheduled ref="autoBackupJob" method="deleteLogJob" cron="${auto_backup_job}" />
	    <task:scheduled ref="modifyNetbehaviorLoginfoJob" method="job" cron="${modify_netbehavior_loginfo_job}"/>
	    <task:scheduled ref="operateCommandJob" method="job" cron="${operate_command_job}"/>
	</task:scheduled-tasks>
	 <task:scheduler id="myScheduler" pool-size="10"/>
	</beans>
</beans>